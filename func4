int categoryChoice;
        cin >> categoryChoice;
        cin.ignore();
        
        if (categoryChoice < 1 || categoryChoice > categories.size()) {
            cerr << "Invalid choice! Exiting..." << endl;
            return 1;
        }
        
        cout << "Choose difficulty (1 = Easy, 2 = Hard): ";
        int difficulty;
        cin >> difficulty;
        cin.ignore();
        
        vector<string> words;
        loadWords(words, filenames[categoryChoice - 1]);
        
        if (difficulty == 2) {
            loadWords(words, hardFilenames[categoryChoice - 1]);
        }
        
        if (words.empty()) {
            cerr << "No words loaded. Check files." << endl;
            return 1;
        }
        
        int attempts = 6;
        
        srand(time(0));
        string word = words[rand() % words.size()];
        vector<bool> guessed(word.length(), false);
        transform(word.begin(), word.end(), word.begin(), ::tolower);
        
        cout << "Game starting!\n";
